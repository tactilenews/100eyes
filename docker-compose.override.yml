x-dev-defaults: &x-dev-defaults
  build:
    context: .
  environment:
    HUNDRED_EYES_PROJECT_NAME: "${HUNDRED_EYES_PROJECT_NAME}"
    RAILS_ENV: "${RAILS_ENV:-development}"
    NODE_ENV: "${NODE_ENV:-development}"
    MAILSERVER_HOST: mailserver
    MAILSERVER_PORT: 1025
    POSTGRES_HOST: db
    CHROME_URL: "http://chrome:3333"

  stdin_open: true
  tty: true
  volumes:
    - .:/app

services:
  app:
    <<: *x-dev-defaults
    depends_on: [ db, mailserver, assets ]
    ports:
      - 3000:3000
      - 3035:3035
    tmpfs:
      - /tmp

  assets:
    <<: *x-dev-defaults
    # As we have mounted the app directory into the container and esbuild expects the
    # node_module folder therein: In case there is no node_module folder on the host machine
    # run npm install to build node_modules in this mounted directory (app). Then just run npm run dev.
    command: >
      bash -c 'if [ ! -d "node_modules" ]; then npm install; fi && npm run dev'

  job-worker:
    <<: *x-dev-defaults
    depends_on: [ db ]

  db:
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports: [ '5432:5432' ]
    image: postgres:14.3-alpine3.16
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mailserver:
    image: maildev/maildev:2.0.2
    ports: [ '1080:1080', '1025:1025' ]

  chrome:
    image: browserless/chrome:1.61-chrome-stable
    ports:
      - "3333:3333"
    # Mount application source code to support file uploading
    # (otherwise Chrome won't be able to find files).
    # NOTE: Make sure you use absolute paths in `#attach_file`.
    volumes:
      - .:/app:cached
    environment:
      # By default, it uses 3000, which is typically used by Rails.
      PORT: 3333
      # Set connection timeout to avoid timeout exception during debugging
      # https://docs.browserless.io/docs/docker.html#connection-timeout
      CONNECTION_TIMEOUT: 600000

volumes:
  postgres_data:

